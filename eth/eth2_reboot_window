#!/usr/bin/env python3

#
# Python 3.x required
#

#
# curl https://raw.githubusercontent.com/WALL-E/static/master/eth/eth2_reboot_window | python3
#
# wget https://raw.githubusercontent.com/WALL-E/static/master/eth/eth2_reboot_window -O eth2_reboot_window
#
#
# Env:
#
#    export ETH2_BEACON_ENDPOINT=https://X:Y@eth2-beacon-mainnet.infura.io
#
# Example:
#
#    watch -d -n 1 ./eth2_reboot_window
#


import os
import sys

import json
import requests


ETH2_BEACON_ENDPOINT = os.getenv("ETH2_BEACON_ENDPOINT") or "http://127.0.0.1:5052"
VALIDATORS = ["210880", "213736"]

def main() -> int:
    r = requests.get(ETH2_BEACON_ENDPOINT + "/eth/v1/beacon/states/head/committees")
    body = r.json()
    committees = body["data"]
    min_slot = 2**32
    max_slot = 0
    result = []
    for committee in committees:
        if int(committee["slot"]) >= max_slot:
            max_slot = int(committee["slot"])
        if int(committee["slot"]) <= min_slot:
            min_slot = int(committee["slot"])
        for validator in VALIDATORS:
            if validator in committee["validators"]:
                result.append({"validator": validator, "slot":committee["slot"], "committee_index": committee["index"]})
    print("epoch: %s, slot: %s-%s" % (int(int(min_slot) / 32), min_slot, max_slot))
    print()
    for i in result:
        print("validator: %s, committee_index: %s, slot: %s" % (i["validator"], i["committee_index"], i["slot"]))
    print()
    print("safe restart time window(slot): %s-%s" % (int(result[-1]["slot"]) + 1, max_slot))

    r = requests.get(ETH2_BEACON_ENDPOINT + "/eth/v1/beacon/blocks/head")
    body = r.json()
    current_slot = int(body["data"]["message"]["slot"])
    print("current slot: ", current_slot)

    return 0

if __name__ == '__main__':
    sys.exit(main())
